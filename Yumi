local key = getgenv().key or ""
local hwid = gethwid()

local request = request
if not request then request = http_request end
if not request then
if http then
request = http.request
elseif syn then
request = syn.request
end
end
if type(request) ~= "function" then error("Request function missing") end
if key == "" then error("Key not set") end
if not hwid or hwid == "" then error("HWID missing") end

local function isValidResponse(body)
local b = tostring(body):lower()
return b:find("ok") or b:find("valid")
end

local function getServerResponse(extra)
local t = os.time()
local url = ("http://whitelist-ivp4.vercel.app/api/vaildate?key=%s&hwid=%s&t=%s%s"):format(key, hwid, t, extra or "")
local success, response = pcall(function()
return request({ Url = url, Method = "GET" })
end)
if not success or not response or not response.Body then
error("Failed server request")
end
return tostring(response.Body)
end

local function runChecks()
local responses = {}
for i = 1, 10 do
local param = (i % 3 == 0 and "&check=3") or (i % 2 == 0 and "&check=2") or ("&chk=" .. i)
if i == 7 then param = "&keyrev=" .. key:reverse() end
responses[i] = getServerResponse(param)
if not isValidResponse(responses[i]) then
error("Whitelist failed on check " .. i .. ": " .. responses[i])
end
end
for i = 2, #responses do
if responses[i] ~= responses[1] then error("Inconsistent server responses") end
end
if #key < 5 or #hwid < 5 then error("Invalid key or HWID length") end

print("✔️ Whitelist verified")
wait(1)
loadstring(game:HttpGet("https://raw.githubusercontent.com/milo22-ux/Script/refs/heads/main/V%E2%9C%A7RTX%20HUB%E2%98%86", true))()
end
runChecks()
